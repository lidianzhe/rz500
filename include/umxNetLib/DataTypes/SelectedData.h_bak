/**************************************************************************************************\

    Author:		UK
    Created:	2015.07.21

---------------------------------------------------------------------------------------------------

    Copyright (c) 2015 CMITech Ltd.

\**************************************************************************************************/

#ifndef __SELECTED_DATA_H__
#define __SELECTED_DATA_H__

#include <string>

#include <cjson/cJSONpp.h>

class SelectedData
{
public:
    SelectedData(const std::string& encounterId, const std::string& timestamp, const std::string& serialNumber);
    const std::string GetEncounterId() const;
    const std::string GetTimestamp() const;
    const std::string GetSerialNumber() const;

    const std::string GetLeftEye() const;
    const std::string GetLeftEyeEnrollIrisTemplate() const;
    void SetLeftEye(std::string&& leftEye);
    void SetLeftEyeEnrollIrisTemplate(std::string&& leftEyeEnrollIrisTemplate);
    void SetLeftEyeUsableIrisArea(const double leftEyeUsableIrisArea);
    void SetLeftEyeQualityScore(const double leftEyeQualityScore);
    void SetLeftEyeQualityOk(const bool leftEyeQualityOk);

    const std::string GetRightEye() const;
    const std::string GetRightEyeEnrollIrisTemplate() const;
    void SetRightEye(std::string&& rightEye);
    void SetRightEyeEnrollIrisTemplate(std::string&& rightEyeEnrollIrisTemplate);
    void SetRightEyeUsableIrisArea(const double rightEyeUsableIrisArea);
    void SetRightEyeQualityScore(const double rightEyeQualityScore);
    void SetRightEyeQualityOk(const bool rightEyeQualityOk);

    const std::string GetFarOffFace() const;
    const std::string GetFarOffFaceFeature() const;
    void SetFarOffFace(std::string&& farOffFace);
    void SetFarOffFaceEyeWidth(const int farOffFaceEyeWidth);
    void SetFarOffFaceFeature(std::string&& farOffFaceFeature);
    void SetFarOffFaceFeatureSize(const long farOffFaceFeatureSize);
    void SetFarOffFaceFrontalScore(const float farOffFaceFrontalScore);
    void SetFarOffFaceLEDState(const int farOffFaceLEDState);
    void SetFarOffFaceLeftEyeX(const int farOffFaceLeftEyeX);
    void SetFarOffFaceRightEyeX(const int farOffFaceRightEyeX);
    void SetFarOffFaceRoll(const float farOffFaceRoll);
    void SetFarOffFaceScore(const float farOffFaceScore);

    const std::string GetFarOnFace() const;
    const std::string GetFarOnFaceFeature() const;
    void SetFarOnFace(std::string&& farOnFace);
    void SetFarOnFaceEyeWidth(const int farOnFaceEyeWidth);
    void SetFarOnFaceFeature(std::string&& farOnFaceFeature);
    void SetFarOnFaceFeatureSize(const long farOnFaceFeatureSize);
    void SetFarOnFaceFrontalScore(const float farOnFaceFrontalScore);
    void SetFarOnFaceLEDState(const int farOnFaceLEDState);
    void SetFarOnFaceLeftEyeX(const int farOnFaceLeftEyeX);
    void SetFarOnFaceRightEyeX(const int farOnFaceRightEyeX);
    void SetFarOnFaceRoll(const float farOnFaceRoll);
    void SetFarOnFaceScore(const float farOnFaceScore);

    const std::string GetNearOffFace() const;
    const std::string GetNearOffFaceFeature() const;
    void SetNearOffFace(std::string&& nearOffFace);
    void SetNearOffFaceEyeWidth(const int nearOffFaceEyeWidth);
    void SetNearOffFaceFeature(std::string&& nearOffFaceFeature);
    void SetNearOffFaceFeatureSize(const long nearOffFaceFeatureSize);
    void SetNearOffFaceFrontalScore(const float nearOffFaceFrontalScore);
    void SetNearOffFaceLEDState(const int nearOffFaceLEDState);
    void SetNearOffFaceLeftEyeX(const int nearOffFaceLeftEyeX);
    void SetNearOffFaceRightEyeX(const int nearOffFaceRightEyeX);
    void SetNearOffFaceRoll(const float nearOffFaceRoll);
    void SetNearOffFaceScore(const float nearOffFaceScore);

    const std::string GetNearOnFace() const;
    const std::string GetNearOnFaceFeature() const;
    void SetNearOnFace(std::string&& nearOnFace);
    void SetNearOnFaceEyeWidth(const int nearOnFaceEyeWidth);
    void SetNearOnFaceFeature(std::string&& nearOnFaceFeature);
    void SetNearOnFaceFeatureSize(const long nearOnFaceFeatureSize);
    void SetNearOnFaceFrontalScore(const float nearOnFaceFrontalScore);
    void SetNearOnFaceLEDState(const int nearOnFaceLEDState);
    void SetNearOnFaceLeftEyeX(const int nearOnFaceLeftEyeX);
    void SetNearOnFaceRightEyeX(const int nearOnFaceRightEyeX);
    void SetNearOnFaceRoll(const float nearOnFaceRoll);
    void SetNearOnFaceScore(const float nearOnFaceScore);

    void SetEncounterId(const std::string& encounterId);
    void SetTimestamp(const std::string& timestamp);
    void SetSerialNumber(const std::string& serialNumber);
    const std::string AsJSONString() const;
    const cjsonpp::JSONObject AsJSONObject() const;
private:
    std::string _encounterId;
    std::string _timestamp;
    std::string _serialNumber;
    //TODO - Replace with structures...add image dimensions for left eye, right eye and face.
    std::string _leftEye;
    double _leftEyeUsableIrisArea;
    double _leftEyeQualityScore;
    bool _leftEyeQualityOk;
    std::string _leftEyeEnrollIrisTemplate;

    std::string _rightEye;
    double _rightEyeUsableIrisArea;
    double _rightEyeQualityScore;
    bool _rightEyeQualityOk;
    std::string _rightEyeEnrollIrisTemplate;

    std::string _farOffFace;
    int _farOffFaceEyeWidth;
    std::string _farOffFaceFeature;
    int64_t _farOffFaceFeatureSize;
    float _farOffFaceFrontalScore;
    int _farOffFaceLEDState;
    int _farOffFaceLeftEyeX;
    int _farOffFaceRightEyeX;
    float _farOffFaceRoll;
    float _farOffFaceScore;

    std::string _farOnFace;
    int _farOnFaceEyeWidth;
    std::string _farOnFaceFeature;
    int64_t _farOnFaceFeatureSize;
    float _farOnFaceFrontalScore;
    int _farOnFaceLEDState;
    int _farOnFaceLeftEyeX;
    int _farOnFaceRightEyeX;
    float _farOnFaceRoll;
    float _farOnFaceScore;

    std::string _nearOffFace;
    int _nearOffFaceEyeWidth;
    std::string _nearOffFaceFeature;
    int64_t _nearOffFaceFeatureSize;
    float _nearOffFaceFrontalScore;
    int _nearOffFaceLEDState;
    int _nearOffFaceLeftEyeX;
    int _nearOffFaceRightEyeX;
    float _nearOffFaceRoll;
    float _nearOffFaceScore;

    std::string _nearOnFace;
    int _nearOnFaceEyeWidth;
    std::string _nearOnFaceFeature;
    int64_t _nearOnFaceFeatureSize;
    float _nearOnFaceFrontalScore;
    int _nearOnFaceLEDState;
    int _nearOnFaceLeftEyeX;
    int _nearOnFaceRightEyeX;
    float _nearOnFaceRoll;
    float _nearOnFaceScore;
};

#endif // __SELECTED_DATA_H__
